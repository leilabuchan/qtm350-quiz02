---
title: "Country Analysis"
---

Analyzing changes in Life Expectancy, GDP per capita, and population for Afghanistan. 

```{python}
#| echo: false
#| eval: true

import pandas as pd
from gapminder import gapminder
import matplotlib.pyplot as plt

# Rename 'lifeExp' to 'life_expectancy' and 'gdpPercap' to 'gdp_per_capita'
gapminder = gapminder.rename(columns={'lifeExp': 'life_expectancy',
                                      'pop': 'population_millions', 
                                      'gdpPercap': 'gdp_per_capita'})

# Convert population to millions
gapminder['population_millions'] = gapminder['population_millions'] / 1_000_000

# Create a new pandas DataFrame from the modified gapminder data
gapminder_df = pd.DataFrame(gapminder)

# Save the DataFrame as a CSV file
gapminder_df.to_csv('gapminder.csv', index=False)

afghanistan_data = gapminder[gapminder['country'] == 'Afghanistan']

# Create a figure and axis
fig, ax1 = plt.subplots(figsize=(12, 8))

# Plot GDP per capita on the left y-axis
ax1.plot(afghanistan_data['year'], afghanistan_data['gdp_per_capita'], label='GDP per Capita', color='b')

# Set labels for the left y-axis
ax1.set_xlabel('Year')
ax1.set_ylabel('GDP per Capita', color='b')
ax1.tick_params(axis='y', labelcolor='b')

# Create a second y-axis for population
ax2 = ax1.twinx()

# Plot population on the right y-axis
ax2.plot(afghanistan_data['year'], afghanistan_data['population_millions'], linestyle='dashed', label='Population (millions)', color='g')

# Set labels for the right y-axis
ax2.set_ylabel('Population (millions)', color='g')
ax2.tick_params(axis='y', labelcolor='g')

# Plot life expectancy on the left y-axis using a secondary plot
ax1.plot(afghanistan_data['year'], afghanistan_data['life_expectancy'], label='Life Expectancy', color='r')

# Add title and legend
plt.title('Changes in GDP per Capita, Population, and Life Expectancy Over Time for Afghanistan')
fig.tight_layout()
fig.legend(loc='upper left', bbox_to_anchor=(0.1, 0.9))

# Show the plot
plt.show()
```